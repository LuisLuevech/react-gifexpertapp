{"version":3,"sources":["components/AddCategory.js","components/GifGridItems.js","helpers/getGifts.js","components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItems","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAa5C,OAEI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAhBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,YCLnBG,EAAe,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACtC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCDHK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdN,EAFc,iDAEkCO,UAAUF,GAF5C,+DAGDG,MAAOR,GAHN,cAGdS,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVtB,kBAebY,GAfa,4CAAH,sDCDRK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECCV,SAACA,GAAc,IAAD,EAEbrB,mBAAU,CAChC2B,KAAK,GACLO,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAmBvC,OAZAC,qBAAW,WAEPjB,EAASC,GACJiB,MAAO,SAAAC,GACJH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAACb,IAEGc,EDlBwBK,CAAenB,GAAlCU,EAFuB,EAE5BJ,KAAYO,EAFgB,EAEhBA,QAMnB,OACI,oCACA,wBAAIjB,UAAU,qCAAqCI,GAEjDa,GAAW,uBAAGjB,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAIPc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAW,IAAKX,EAAIhB,IACLgB,UEcTY,EAjCM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,UAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KASvB,OACQ,oCACI,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,4BAEQ4C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACIoB,IAAOpB,EACPA,SAAYA,UCnB5CuB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.8ba3eeff.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue (e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        \r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n       \r\n    )\r\n\r\n\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n};","import React from 'react'\r\n\r\nexport const GifGridItems = ({ id, title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\n\r\n\r\nexport const getGifts = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=7zfRlkIvz8c9UmSMPoee4eCRZN1bb9i1`;\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    \r\n    return gifs;\r\n}\r\n","import React from 'react'\r\nimport { GifGridItems } from './GifGridItems';\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images,loading } = useFetchGifts( category );\r\n   \r\n\r\n    \r\n \r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        \r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n        \r\n        <div className=\"card-grid\">\r\n            \r\n            \r\n            {\r\n                images.map (img =>(\r\n                    <GifGridItems \r\n                    key={img.id}\r\n                    {...img}/>  \r\n                ))\r\n            }\r\n           \r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifts} from '../helpers/getGifts'\r\n\r\n\r\n\r\nexport const useFetchGifts = (category) => {\r\n\r\n    const [state, setState] = useState ({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=> {\r\n\r\n        getGifts(category)\r\n            .then ( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n    }, [category]);\r\n\r\n    return state; //{ data: [], loading:true};\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n//import PropTypes from 'prop-types';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['Hello']);\r\n\r\n    //const handleAdd = () =>{\r\n    //    setCategories([...categories, 'Hunter Hunter']);\r\n    //}\r\n\r\n    \r\n    return (\r\n            <>\r\n                <h2>GifExpertApp</h2>\r\n                <hr></hr>\r\n                <AddCategory setCategories={ setCategories } />\r\n                <ol>\r\n                    {\r\n                        categories.map (category =>(\r\n                            <GifGrid \r\n                                key = {category}\r\n                                category = {category}\r\n                            />\r\n                        ))\r\n                    }\r\n                    \r\n                    \r\n                </ol>     \r\n                \r\n            </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}